<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.jiwontest.dao.ProjectMapper">


    <!-- ProjectInfoDto 컬럼명 변경 및 등록-->
    <resultMap id="projectInfo" type="ProjectInfoDto">

        <id property="prjSeq" column="PRJ_SEQ"/>
        <result property="prjNm" column="PRJ_NM"/>
        <result property="custCd" column="CUST_CD"/>
        <result property="prjStDt" column="PRJ_ST_DT"/>
        <result property="prjEdDt" column="PRJ_ED_DT"/>
        <result property="prjDtl" column="PRJ_DTL"/>

        <result property="custCdNm" column="CUST_CD_NM"/>
    </resultMap>


    <!-- CodeDetail 컬럼명 변경 및 등록 -->
    <resultMap id="projectSkill" type="CodeDetail">
        <result property="mstCd" column="mst_cd"/>
        <result property="dtlCd" column="dtl_cd"/>

        <result property="mstCdNm" column="mst_cd_nm"/>
        <result property="dtlCdNm" column="dtl_cd_nm"/>
    </resultMap>





    <!-- 전체 프로젝트 리스트 조회 -->
    <select id="selectAllProjects" resultMap="projectInfo">
        SELECT pi.*,
               cd_cu.DTL_CD_NM AS CUST_CD_NM
        FROM project_info pi
                LEFT JOIN CODE_DETAIL cd_cu
                    ON pi.CUST_CD = cd_cu.DTL_CD AND cd_cu.MST_CD = 'CU01'
    </select>


    <!-- 특정 마스터 코드에 해당하는 상세 코드 리스트 조회 -->
    <select id="getCodeDetailsByMstCd" resultType="com.example.jiwontest.dto.CodeDetail" parameterType="string">
        SELECT *
        FROM CODE_DETAIL
        WHERE MST_CD = #{mstCd};
    </select>


    <!-- 마스터 코드와 프로젝트번호를 이용하여 스킬 목록 조회 -->
    <select id="getCodeDetail" resultMap="projectSkill">
        SELECT cd.*
        FROM code_detail cd
        WHERE cd.mst_cd = #{mstCode}
        <if test="project != null">
            AND cd.dtl_cd
            IN (SELECT sk_cd
                FROM project_skill
                WHERE PRJ_SEQ = #{project.prjSeq})
        </if>
    </select>


    <!--필요기술등록 -->
    <insert id="insertProjectSkill" parameterType="map">
        INSERT INTO PROJECT_SKILL (PRJ_SEQ, SK_CD)
        VALUES (#{prjSeq}, #{skCd})
    </insert>



    <!-- 프로젝트 검색 리스트 -->
    <select id="searchProjects" resultMap="projectInfo">
        SELECT pi.*,
        cd_cu.DTL_CD_NM AS CUST_CD_NM

        FROM PROJECT_INFO pi

        LEFT JOIN CODE_DETAIL cd_cu
        ON pi.CUST_CD = cd_cu.DTL_CD AND cd_cu.MST_CD = 'CU01'

        WHERE PRJ_NM LIKE CONCAT('%', #{prjNm}, '%')  <!-- 필수 조건 -->

        <if test="custCd != null and custCd != '' ">
            AND CUST_CD = #{custCd}
        </if>

        <if test="startPrjStDt != null and endPrjStDt != null">
            AND PRJ_ST_DT BETWEEN #{startPrjStDt} AND #{endPrjStDt}
        </if>

        <if test="startPrjEdDt != null and endPrjEdDt != null">
            AND PRJ_ED_DT BETWEEN #{startPrjEdDt} AND #{endPrjEdDt}
        </if>
    </select>



    <!-- 신규 등록 -->
    <!--useGeneratedKeys => 자동 생성된 키를 MyBatis가 사용할지 여부를 지정-->
    <!--keyProperty =>  자동 생성된 키가 저장될 자바 객체의 필드를 지정-->
    <insert id="insertProject" parameterType="ProjectInfoDto" useGeneratedKeys="true" keyProperty="prjSeq">
        INSERT INTO PROJECT_INFO (PRJ_SEQ,
                                  PRJ_NM,
                                  CUST_CD,
                                  PRJ_ST_DT,
                                  PRJ_ED_DT,
                                  PRJ_DTL)
                                    VALUES (#{prjSeq},
                                            #{prjNm},
                                            #{custCd},
                                            #{prjStDt},
                                            #{prjEdDt},
                                            #{prjDtl})
    </insert>



    <!-- 상세 조회 -->
    <select id="getProjectById" resultMap="projectInfo" parameterType="int">
        SELECT pi.*,
               cd_cu.DTL_CD_NM AS CUST_CD_NM
        FROM PROJECT_INFO pi LEFT JOIN CODE_DETAIL cd_cu
                              ON pi.CUST_CD = cd_cu.DTL_CD AND cd_cu.MST_CD = 'CU01'
        WHERE PRJ_SEQ = #{prjSeq}
    </select>



    <!-- 사원수정 -->
    <update id="updateProject" parameterType="ProjectInfoDto">
        UPDATE PROJECT_INFO
        SET PRJ_NM        = #{prjNm},
            CUST_CD       = #{custCd},
            PRJ_ST_DT     = #{prjStDt},
            PRJ_ED_DT     = #{prjEdDt},
            PRJ_DTL       = #{prjDtl}

        WHERE PRJ_SEQ = #{prjSeq}
    </update>


    <!--상세페이지에서 필요기숳 업데이트 위한 삭제 + 수정-->

    <!-- -프로젝트 필요기술 삭제 -->
    <delete id="deleteProjectSkill" parameterType="map">
        DELETE
        FROM PROJECT_SKILL
        WHERE PRJ_SEQ = #{prjSeq}
    </delete>

    <!-- -사원 보유기술 수정 (삭제하고 집어넣는거여서 insert) -->
    <insert id="updateProjectSkill" parameterType="map">
        INSERT INTO PROJECT_SKILL (PRJ_SEQ, SK_CD)
        VALUES (#{prjSeq}, #{skCd})
    </insert>





    <!--프로젝트 삭제-->
    <delete id="deleteProject" parameterType="int">
        DELETE
        FROM PROJECT_INFO
        WHERE PRJ_SEQ = #{prjSeq}
    </delete>



    <!--******************************************팝업창*********************************************************-->


    <!-- MemberInfoDto 컬럼명 변경 및 등록-->
    <resultMap id="memberInfo" type="MemberInfoDto">
        <id property="memSeq" column="MEM_SEQ"/>
        <result property="memImg" column="MEM_IMG"/>
        <result property="memId" column="MEM_ID"/>
        <result property="memPw" column="MEM_PW"/>
        <result property="memNm" column="MEM_NM"/>
        <result property="memBirth" column="MEM_BIRTH"/>
        <result property="memHireDate" column="MEM_HIRE_DATE"/>
        <result property="memRaCd" column="MEM_RA_CD"/>
        <result property="memDpCd" column="MEM_DP_CD"/>
        <result property="memDvCd" column="MEM_DV_CD"/>
        <result property="memPostCode" column="MEM_POSTCODE"/>
        <result property="memAddr" column="MEM_ADDR"/>
        <result property="memDetailAddr" column="MEM_DETAIL_ADDR"/>
        <result property="memExtraAddr" column="MEM_EXTRA_ADDR"/>
        <result property="memEmail" column="MEM_EMAIL"/>
        <result property="memPhone" column="MEM_PHONE"/>

        <result property="raCdNm" column="RA_CD_NM"/> <!-- 직급 코드명 -->
        <result property="dpCdNm" column="DP_CD_NM"/> <!-- 부서 코드명 -->
        <result property="dvCdNm" column="DV_CD_NM"/> <!-- 개발분야 코드명 -->
        <result property="dtlCdNm" column="DTL_CD_NM"/>

    </resultMap>


    <!-- ProjectMemberDto 컬럼명 변경 및 등록-->
    <resultMap id="projectMember" type="com.example.jiwontest.dto.ProjectMemberDto">

        <id property="prjSeq" column="PRJ_SEQ"/>
        <result property="memSeq" column="MEM_SEQ"/>
        <result property="memNm" column="MEM_NM"/>
        <result property="memDvCd" column="MEM_DV_CD"/>
        <result property="prjInDt" column="PRJ_IN_DT"/>
        <result property="prjOutDt" column="PRJ_OUT_DT"/>
        <result property="prjRoCd" column="PRJ_RO_CD"/>

        <result property="dvCdNm" column="DV_CD_NM"/>
        <result property="prjRoCdNM" column="PRJ_RO_CD_NM"/>
    </resultMap>





    <!-- 팝업창 //검색 조건이 없는 경우 (초기화 포함)-->
    <select id="selectAvailableMembers" resultMap="memberInfo">
        SELECT mi.*,
               cd.DTL_CD_NM AS DV_CD_NM,
                GROUP_CONCAT(cd_sk.DTL_CD_NM ORDER BY cd_sk.DTL_CD_NM SEPARATOR ', ') AS DTL_CD_NM

        FROM MEMBER_INFO mi

        LEFT JOIN CODE_DETAIL cd
                ON mi.MEM_DV_CD = cd.DTL_CD AND cd.MST_CD = 'DV01'
        LEFT JOIN member_skill ms
                ON mi.MEM_SEQ = ms.MEM_SEQ
        LEFT JOIN CODE_DETAIL cd_sk
                ON ms.SK_CD = cd_sk.DTL_CD AND cd_sk.MST_CD = 'SK01'

        <where>
            <if test="projectMemberIds != null and projectMemberIds.size() > 0">
                mi.mem_seq NOT IN
                <foreach item="item" index="index" collection="projectMemberIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>

        GROUP BY
        mi.MEM_SEQ;
    </select>



    <!--팝업창 //검색 조건이 있는 경우-->
    <!--그룹바이한거에 <where>만 추가-->
    <select id="searchPopupMems" resultMap="memberInfo">
        SELECT mi.*,
               cd.DTL_CD_NM AS DV_CD_NM,
               GROUP_CONCAT(cd_sk.DTL_CD_NM ORDER BY cd_sk.DTL_CD_NM SEPARATOR ', ') AS DTL_CD_NM

        FROM MEMBER_INFO mi

        LEFT JOIN CODE_DETAIL cd
                ON mi.MEM_DV_CD = cd.DTL_CD
                AND cd.MST_CD = 'DV01'

        LEFT JOIN member_skill ms
                ON mi.MEM_SEQ = ms.MEM_SEQ

        LEFT JOIN CODE_DETAIL cd_sk
                ON ms.SK_CD = cd_sk.DTL_CD
                AND cd_sk.MST_CD = 'SK01'

        <where>
            <if test="projectMemberIds != null and projectMemberIds.size() > 0">
                mi.mem_seq NOT IN
                <foreach item="item" index="index" collection="projectMemberIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND mi.mem_Nm LIKE CONCAT('%', #{memNm}, '%')
            <if test="memDvCd != null and memDvCd != ''">
                AND mi.MEM_DV_CD = #{memDvCd}
            </if>
        </where>

        GROUP BY
        mi.MEM_SEQ;
    </select>




    <!--체크박스 값 저장-->
    <!--useGeneratedKeys => 자동 생성된 키를 MyBatis가 사용할지 여부를 지정-->
    <!--keyProperty =>  자동 생성된 키가 저장될 자바 객체의 필드를 지정-->
    <insert id="projectMemberAdd" parameterType="list">
        INSERT INTO project_member (PRJ_SEQ,
                                    MEM_SEQ,
                                    MEM_NM,
                                    MEM_DV_CD,
                                    PRJ_IN_DT,
                                    PRJ_OUT_DT,
                                    PRJ_RO_CD)
        VALUES
                <foreach collection="list" item="item" separator=",">
                    (#{item.prjSeq}, #{item.memSeq}, #{item.memNm}, #{item.memDvCd}, #{item.prjInDt}, #{item.prjOutDt}, #{item.prjRoCd})
                </foreach>
        ON DUPLICATE KEY UPDATE
        MEM_NM = VALUES(MEM_NM),
        MEM_DV_CD = VALUES(MEM_DV_CD),
        PRJ_IN_DT = VALUES(PRJ_IN_DT),
        PRJ_OUT_DT = VALUES(PRJ_OUT_DT),
        PRJ_RO_CD = VALUES(PRJ_RO_CD);
    </insert>



    <!--사원ID로 체크된 프로젝트 정보들을 가져옴-->
    <select id="getMembersByIds" parameterType="list" resultMap="memberInfo">
        SELECT *
        FROM MEMBER_INFO
        WHERE mem_seq IN
        <foreach item="item" index="index" collection="memSeqList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>





    <!-- 프로젝트사원창 조회-->
    <select id="projectMemberSelect" parameterType="map" resultMap="projectMember">
        SELECT
        pm.*,
        cd_dv.DTL_CD_NM AS DV_CD_NM

        FROM project_member pm

        LEFT JOIN member_info mi
                  ON pm.mem_seq = mi.mem_seq
        LEFT JOIN project_info pi
                  ON pm.prj_seq = pi.prj_seq

        LEFT JOIN CODE_DETAIL cd_dv
                   ON pm.MEM_DV_CD = cd_dv.DTL_CD AND cd_dv.MST_CD = 'DV01'
        LEFT JOIN CODE_DETAIL cd_ro
                   ON pm.PRJ_RO_CD = cd_ro.DTL_CD AND cd_ro.MST_CD = 'RO01'

        WHERE
        pm.prj_seq = #{prjSeq}

        AND pm.mem_seq IN
        <foreach item="item" index="index" collection="memSeqList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>



    <!-- project_member 테이블에서 prjSeq(135)로 memSeqList 가져오기-->
    <select id="getMemberList" parameterType="map" resultMap="projectMember">
        SELECT
            *
        FROM project_member pm
        where
            pm.prj_seq = #{prjSeq}
    </select>


    <!-- 위에서 가져온 memSeqList로 member정보 조회-->
    <select id="getMemberRegister" parameterType="map" resultMap="memberInfo">
        SELECT *
        FROM member_info
        WHERE
        <if test="seqList != null and seqList.size() > 0">
            mem_Seq IN
            <foreach item="item" index="index" collection="seqList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="seqList == null or seqList.size() == 0">
            1 = 0
        </if>
    </select>



    <!-- 프로젝트 리스트 삭제-->
    <delete id="projectMemberDelete" parameterType="map">
        DELETE
        FROM project_member
        WHERE mem_Seq IN

        <foreach collection="chkList" item="item" open="(" close=")" separator=","> /*(1, 2, 3)*/
            #{item}
        </foreach>
        AND
        prj_Seq = #{prjSeq} /*번호 135*/
    </delete>


    <!--사원 프로젝트 체크 수정-->
    <update id="updateProjectMember" parameterType="com.example.jiwontest.dto.ProjectInfoDto">
        UPDATE project_member
        SET PRJ_IN_DT = #{prjInDt},
            PRJ_OUT_DT = #{prjOutDt},
            PRJ_RO_CD = #{prjRoCd}
        WHERE PRJ_SEQ = #{prjSeq}
          AND MEM_SEQ = #{memSeq}
    </update>




</mapper>